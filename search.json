[{"path":"https://simonmoulds.github.io/ea/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 ea authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://simonmoulds.github.io/ea/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Simon Moulds. Author, maintainer.","code":""},{"path":"https://simonmoulds.github.io/ea/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Moulds S (2024). ea: Hydrological data EA. R package version 0.0.0.9000, https://simonmoulds.github.io/ea/.","code":"@Manual{,   title = {ea: Hydrological data from EA},   author = {Simon Moulds},   year = {2024},   note = {R package version 0.0.0.9000},   url = {https://simonmoulds.github.io/ea/}, }"},{"path":"https://simonmoulds.github.io/ea/index.html","id":"ea","dir":"","previous_headings":"","what":"Hydrological data from EA","title":"Hydrological data from EA","text":"ea package provides access Environment Agency (EA) Hydrology API.","code":""},{"path":"https://simonmoulds.github.io/ea/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Hydrological data from EA","text":"can install development version ea GitHub :","code":"devtools::install_github(\"simonmoulds/ea\") #> Skipping install of 'ea' from a github remote, the SHA1 (450d8068) has not changed since last install. #>   Use `force = TRUE` to force installation"},{"path":"https://simonmoulds.github.io/ea/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Hydrological data from EA","text":"basic example shows use package download streamflow timeseries data EA Hydrology API: steps required download historical streamflow data outlined : obtained data can plot timeseries:","code":"library(dplyr) #>  #> Attaching package: 'dplyr' #> The following objects are masked from 'package:stats': #>  #>     filter, lag #> The following objects are masked from 'package:base': #>  #>     intersect, setdiff, setequal, union library(lubridate) #>  #> Attaching package: 'lubridate' #> The following objects are masked from 'package:base': #>  #>     date, intersect, setdiff, union library(ggplot2) library(ea) # Get discharge stations on the River Thames within 5km of Abingdon abingdon_stations <- ea_station_list(   sample_of = \"River Thames\", observed_property = \"waterFlow\",   lat = 51.6708, long = -1.2880, dist = 5 ) guid <- abingdon_stations$stationGuid tslist <- ea_timeseries_list(guid)  # Filter to get daily mean flow  measure <- tslist |>   filter(period == 86400 & valueType == \"mean\") |>    pull(notation) min_date <- Sys.Date() %m-% months(3) ts <- ea_timeseries_values(measure, min_date = min_date)  # Alternatively:  ts <- ea_timeseries_values(   station_guid = guid, observed_property = \"waterFlow\",   value_type = \"mean\", period = 86400, min_date = min_date )"},{"path":"https://simonmoulds.github.io/ea/reference/ea-package.html","id":null,"dir":"Reference","previous_headings":"","what":"ea: Retrieve hydrological data from the Environment Agency — ea-package","title":"ea: Retrieve hydrological data from the Environment Agency — ea-package","text":"Functions discover download data Environment Agency (EA) Hydrology API.","code":""},{"path":"https://simonmoulds.github.io/ea/reference/ea-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"ea: Retrieve hydrological data from the Environment Agency — ea-package","text":"Maintainer: Simon Moulds simon.moulds@gmail.com (ORCID)","code":""},{"path":"https://simonmoulds.github.io/ea/reference/ea-package.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"ea: Retrieve hydrological data from the Environment Agency — ea-package","text":"","code":"if (FALSE) { # \\dontrun{ print(\"Hello, world\") } # }"},{"path":"https://simonmoulds.github.io/ea/reference/ea_station_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Get tibble with station information — ea_station_list","title":"Get tibble with station information — ea_station_list","text":"Returns metadata stations EA network.","code":""},{"path":"https://simonmoulds.github.io/ea/reference/ea_station_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get tibble with station information — ea_station_list","text":"","code":"ea_station_list(   station_guid,   sample_of,   status_label,   observed_property,   open_from,   open_to,   long,   lat,   easting,   northing,   dist,   ... )"},{"path":"https://simonmoulds.github.io/ea/reference/ea_station_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get tibble with station information — ea_station_list","text":"station_guid Character. Station globally unique identifer. one station can provided . sample_of Character. River name (e.g. \"River Thames\"). Note rivers named inconsistently, may necessary supply multiple versions river names. status_label Character. One 'Active', 'Suspended' 'Closed' observed_property Character. open_from Date character formatted \"YYYY-MM-DD\" open_to Date character formatted \"YYYY-MM-DD\" long Numeric. longitude centre search area radius dist. lat Numeric. latitude centre search area radius dist. easting Numeric. easting centre search area radius dist. northing Numeric. northing centre search area radius dist. dist Numeric. Distance kilometres point specified long lat easting northing. ... Additional arguments. None implemented.","code":""},{"path":"https://simonmoulds.github.io/ea/reference/ea_station_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get tibble with station information — ea_station_list","text":"tibble.","code":""},{"path":"https://simonmoulds.github.io/ea/reference/ea_station_list.html","id":"measured-variables","dir":"Reference","previous_headings":"","what":"Measured variables","title":"Get tibble with station information — ea_station_list","text":"argument observed_property allows select stations based variables measure. available options: waterFlow waterLevel rainfall groundwaterLevel dissolved-oxygen fdom bga turbidity chlorophyll conductivity temperature ammonium nitrate ph","code":""},{"path":"https://simonmoulds.github.io/ea/reference/ea_station_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get tibble with station information — ea_station_list","text":"","code":"if (FALSE) { # \\dontrun{  # Get all stations that collect river discharge  x <- ea_station_list(observed_property = \"waterFlow\")  # Get metadata for a certain station id <- x$stationGuid[1] y <- ea_station_list(station_guid = id)  # Get metadata for all stations on the Thames thames_nms <- c(\"River Thames\", \"RIVER THAMES\", \"THAMES\") thames_stations <- ea_station_list(sample_of = thames_nms)  # Get discharge stations on the River Thames within 20km of Abingdon abingdon_stations <- ea_station_list(   sample_of = thames_nms, observed_property = \"waterFlow\",   lat = 51.6708, long = -1.2880, dist = 20 ) } # }"},{"path":"https://simonmoulds.github.io/ea/reference/ea_timeseries_list.html","id":null,"dir":"Reference","previous_headings":"","what":"Get list of available time series for one or more stations — ea_timeseries_list","title":"Get list of available time series for one or more stations — ea_timeseries_list","text":"Get list available time series one stations","code":""},{"path":"https://simonmoulds.github.io/ea/reference/ea_timeseries_list.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get list of available time series for one or more stations — ea_timeseries_list","text":"","code":"ea_timeseries_list(station_guid, ...)"},{"path":"https://simonmoulds.github.io/ea/reference/ea_timeseries_list.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get list of available time series for one or more stations — ea_timeseries_list","text":"station_guid Character. Station global unique identifier. Either single station ID vector station IDs. corresponds stationGuid column metadata returned ea_station_list. ... Additional arguments. None implemented.","code":""},{"path":"https://simonmoulds.github.io/ea/reference/ea_timeseries_list.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get list of available time series for one or more stations — ea_timeseries_list","text":"tibble.","code":""},{"path":"https://simonmoulds.github.io/ea/reference/ea_timeseries_list.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get list of available time series for one or more stations — ea_timeseries_list","text":"","code":"if (FALSE) { # \\dontrun{ # Get discharge stations on the River Thames within 20km of Abingdon abingdon_stations <- ea_station_list(   sample_of = \"River Thames\", observed_property = \"waterFlow\",   lat = 51.6708, long = -1.2880, dist = 20 ) guid <- abingdon_stations$stationGuid tslist <- ea_timeseries_list(guid) } # }"},{"path":"https://simonmoulds.github.io/ea/reference/ea_timeseries_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Get time series data for one or more stations — ea_timeseries_values","title":"Get time series data for one or more stations — ea_timeseries_values","text":"ea_timeseries_values() used retrieve timeseries data one two ways. Firstly, may supply measure argument, string uniquely identifies measurement provided notation column tibble returned ea_timeseries_list(). Alternatively, can provide station_guid, observed_property, value_type period uniquely define measurement.","code":""},{"path":"https://simonmoulds.github.io/ea/reference/ea_timeseries_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get time series data for one or more stations — ea_timeseries_values","text":"","code":"ea_timeseries_values(   measure,   station_guid,   observed_property,   value_type,   period,   date,   min_date,   max_date,   earliest = FALSE,   latest = FALSE,   ... )"},{"path":"https://simonmoulds.github.io/ea/reference/ea_timeseries_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get time series data for one or more stations — ea_timeseries_values","text":"measure Character. String uniquely identifies measurement. provided notation column tibble returned ea_timeseries_list(). station_guid Character. Station global unique identifier. used measure supplied. observed_property Character. Observation property. used measure supplied. value_type Character. Value type. used measure supplied. period Integer. Period readings seconds. used measure supplied. date Date character formatted \"YYYY-MM-DD\" min_date Date character formatted \"YYYY-MM-DD\" max_date Date character formatted \"YYYY-MM-DD\" earliest Logical. TRUE, return earliest measurements record. latest Logical. TRUE, return latest measurements record. ... Additional arguments. None implemented.","code":""},{"path":"https://simonmoulds.github.io/ea/reference/ea_timeseries_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get time series data for one or more stations — ea_timeseries_values","text":"tibble.","code":""},{"path":"https://simonmoulds.github.io/ea/reference/ea_timeseries_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get time series data for one or more stations — ea_timeseries_values","text":"","code":"if (FALSE) { # \\dontrun{  # Get discharge stations on the River Thames within 5km of Abingdon abingdon_stations <- ea_station_list(   sample_of = \"River Thames\", observed_property = \"waterFlow\",   lat = 51.6708, long = -1.2880, dist = 5 ) guid <- abingdon_stations$stationGuid tslist <- ea_timeseries_list(guid)  # Filter to get daily mean flow  measure <- tslist |>    filter(period == 86400 & valueType == \"mean\") |>    pull(notation) min_date = Sys.Date() - lubridate::days(31) ts <- ea_timeseries_values(measure, min_date = min_date)  # Alternatively:  ts <- ea_timeseries_values(   station_guid = guid, observed_property = \"waterFlow\",   value_type = \"mean\", period = 86400, min_date = min_date ) } # }"}]
